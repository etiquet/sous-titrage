/********************************************	 proto.h	Les prototype des fonctions	note: fichier historique, aujourd'hui on pourrais faire mieux	*********************************************/#ifndef __BBProtos__#define	__BBProtos__void			Initialise_BonBougre(void);pascal short	DoAlertNotKeyPresent(void);pascal Boolean	AlertFilterProc(DialogPtr theDialog ,EventRecord *event,short *itemhit);pascal Boolean	TrackCurseur(DialogPtr dialog,short itemnumber);pascal long 	C_IncDecValue(DialogPtr Dialog,short itemNumber,short textitemnumber,long minvalue,long maxvalue,long increment);pascal short 	SetDitlIconId(DialogPtr Dialog,short itemNumber,short newId);pascal short	 C_findIconResourceDitl(DialogPtr Dialog,short itemNumber);pascal void 	C_Unhilite_icon_button(DialogPtr Dialog,short itemNumber);pascal void 	C_Hilite_icon_button(DialogPtr Dialog,short itemNumber);pascal void 	AlertUser(short error);pascal void 	MakeReliefRectangle(Rect *rect);pascal void 	MakeReliefRectangle1(Rect *rect);// proto .apascal void DoUpdate(WindowPtr window);pascal void		DeplaceBlock(Ptr startblock,Ptr endblock,long offset);pascal void		RenumerationAbsST(void);pascal void		C_RenumerotationListeSousTitre(SousTitreRecordPtr ST);pascal void 	DrawOneSousTitre(SousTitreRecordPtr ST,short Xstart,short Ystart,Point P1,Point P2);pascal void 	DoMakeUndo(short item,long ticks,long absnum,long parametre);pascal SousTitreRecordPtr C_ConversionTimeCodePointeur(long tc);pascal void		UpdateGeneralValue();pascal void		SignalErreurSousTitre(SousTitreRecordPtr st);pascal void		VerifieTimeCodes(SousTitreRecordPtr st);pascal short 	Configuration_Cache(short cache);pascal short	Draw_SousTitre(SousTitreRecordPtr ST,short xpos,						short ypos,Ptr ScreenBase,long Row_byte,Rect *r);pascal void		Clear_Buffer();pascal void		DochangeFont();pascal void		RechercherSousTitre(short mode);pascal void		TransfertSaisieMemoire();pascal void		TxRS422(long commande,long Parrametres,short Refnum);// routine c proto// DŽclaration des routinespascal void		Modifie_TableDeKerning(void);pascal Boolean	AlertSpecialModalDialogFilter(DialogPtr theDialog ,EventRecord *event,short *itemhit);pascal Boolean	SpecialModalDialogFilter(DialogPtr theDialog ,EventRecord *event,short *itemhit);pascal Boolean	Special_C_ModalDialogFilter(DialogPtr theDialog ,EventRecord *event,short *itemhit); pascal void		GivescreenBits(Rect	*the_Rect);pascal void		WaiTaicks(long value);pascal void		ActionProc( ControlHandle control, short part );pascal long		C_IncDecValue(DialogPtr Dialog,short itemNumber,short TexteitemNumber,long minvalue,long maxvalue,long increment);pascal void		find_Bbof_File(MtcSearch	*The_MtcSearch,long signature);pascal Boolean	GiveNewKern(KerningElement *theKern);pascal short		C_MakeTheBbdfMenu(long signature,MenuHandle menu,Handle *The_handle);pascal	short	GiveUser_Choice(Str255  *string);pascal	void	C_FaireCopie_Fichier(Str255  name);pascal	void	WriteBonBougreFormat(ParmBlkPtr pb,Str255 name,short autosave);pascal	void	AddkernItem(KerningMasterListHandle  thekernlist,KerningElementPtr NewKernElement);		pascal	void	DelkernItem(KerningMasterListHandle **thekernlist,long theNumber);		pascal	void	ModifykernItem(KerningMasterListHandle **thekernlist,long theNumber,long NewKernValue);		pascal	long	GivekernValue(KerningMasterListHandle **thekernlist,short Firstchar,short SecondChar);		pascal	long	GivekernEntry(KerningMasterListHandle **thekernlist,short Firstchar,short SecondChar);		pascal	short	GetTexT(Str255 *string);pascal	short	OpenBBPrefFile(short create);pascal	OSErr	MakePrefFileLastDisplayFontUsed(FSSpec *target,FontRenderRecord *thefontrender);pascal	void	DoFileOpen(FSSpec *target);pascal	Boolean	OpenLastDisplayFontUsed(void);pascal	Handle	GetGlobalRgbColorHandle(void);pascal	Boolean MakeCurentFileAliasInPref(AliasHandle alias);pascal	Boolean	OpenLastFileUsed(void);pascal	void	DeleteLastFileUsed(void);pascal	void	CopieLesFontValeursUtiles(Handle handle);pascal	void	CopieLesCouleurs(Handle handle);pascal short	OpenBBPreferenceFile(short create);pascal	void	GetKernElement(KerningMasterListHandle thelist,long element,KerningElementPtr the_kern);pascal	void	SetKernElement(KerningMasterListHandle thelist,long element,KerningElementPtr the_kern);pascal	void	DeleteKernElement(KerningMasterListHandle thelist,long element);pascal	OSErr	WriteKerningInResource(KerningMasterListHandle list);pascal	Ptr		GetGlobalsAddresse();pascal 	void	C_RenumerotationSubNumero(SousTitreRecordPtr ST);pascal	void	C_InsertSt(SousTitreRecordPtr ST,long AskLongueur);#pragma parameter TraitementErreurFichier(__D0)pascal void		TraitementErreurFichier(short err);void			ActiveButtonKernDialog(DialogPtr Dialog,short TheitemHit);void			AfficheKernListe(DialogPtr Dialog, ControlHandle control);void			UpdateDialogTableKerning(DialogPtr theDialog, ControlHandle control);void 			C_WaitTicks(long Wait);pascal GDHandle FindFirstPlus(void);pascal void		DoInitializeHighLevelEvent();pascal void		AlertCarteDaffichage();pascal void		DoActivate(WindowPtr window,short state);pascal void		SetShort(Ptr adrr,short value);pascal void		SetLong(Ptr adrr,long value);pascal long		GetLong(Ptr adrr);pascal short	GetShort(Ptr adrr);pascal void		ConfigureVX_UpStreamKeyer();pascal void		ConfigureVX_DownStreamKeyer();pascal void		C_GetAllMemory_WeNeed(void);pascal void		Adjust_BB_Menu(void);pascal void		AdjustMenuAV(void);pascal void		AdjustMenuUndo(void);pascal GDHandle SLOT2GDHANDLE(short slot);void C_GETMAINSCREENRES (Rect *rect);pascal void		ConfigureNuVistaplus(void);pascal void		EffaceTouslesSousTitres(Str255 name);pascal	short	slot2Refnum(short slot);pascal	short	GetBoardID(short slot);pascal	short	GDHandle2slot(GDHandle gdh);pascal	void	FrameRectOneLine(Rect *rect,Boolean enfonce);pascal	void	FrameRectTwoLine(Rect *rect,Boolean enfonce);extern pascal	SousTitreRecordPtr	C_ConversionNumeroSTPointeur(long Absnum);pascal void		DrawListingWindow(void);pascal void		Adjust_ListingScrollBar(void); pascal void		DoActivateListingWindow (Boolean becomingActive);pascal void		AfficheTrackingStatus(void);pascal void		C_ConvertiNumST_String(long num,char *string);pascal unsigned long C_SoustractionTimeCode(unsigned long tc1,unsigned long tc2);pascal unsigned long C_AdditionTimeCode(unsigned long tc1,unsigned long tc2);pascal short	C_get_STJustification(SousTitreRecordPtr st);pascal long		C_ConversionTimeCodeTrames(long tc);pascal long		C_ConversionTramesTimeCode(long tc);pascal void		C_ConversionTCstASCII(long tc,char *string);pascal void		TRANSFERTTEXTE_MEMOIRE_STYLETE(TEHandle te,SousTitreRecordPtr ST_Ptr,Rect* rect,short newsize);pascal void		DrawSt_enCourDansListing(void);pascal void 	DrawSt_enCourDansListing_ByPointeur(unsigned long num);pascal void 	update_listingGworld(void);void			C_QuitApplication(void);pascal void 	Update_JustifButton(void);pascal void 	DrawSaisieValue(void);pascal void 	Draw_Line_Number_Saisie(void);pascal void 	Update_JustifButton(void);pascal void 	CalculDuree(void);pascal void 	Draw_Icon_Text_Ditl(DialogPtr dialog);pascal void 	CentreListingWindow(void);pascal void 	DoDialogSaisieEvent(EventRecord *event);pascal void 	DoOpenSaisieTE(short type);pascal void		DoUpdatePaletteTelecommande( void);pascal void 	DoMouseDownPaletteTelecommande(EventRecord	*event);pascal void 	DoDrawShuttleButton(void);pascal void 	DessineShuttleButton(void);pascal void 	DoListingIdle (void);pascal	OSErr	SetSerialPreference(void);pascal short 	DoRenderingFontDialog(void);void 			RenderAntiAliasChar(RenderInfoPtr render);void 			FiniRendering(RenderInfoPtr render);pascal OSErr 	PrepareRendering(RenderInfoPtr render);pascal 			sliderstructHandle GetNewSlider(short minvalue,					short maxvalue,short value,short increment,Rect *rect);pascal void 	DrawSlider(sliderstructHandle slider);	pascal short 	DoSliderFollow(sliderstructHandle slider);//pascal void C_Rendering_Font_SubRoutine(RenderingParamsPtr the render,Rect *rect,Handle *buffer);pascal void 	DoListingWindowEvent(EventRecord *event);pascal void  	PageSetup(void);pascal void 	C_EcarteSousTitre(SousTitreRecordPtr ST_Ptr,long newsize);pascal void 	PutStringInCommentaireST(SousTitreRecordPtr ST_Ptr,char* string);pascal void 	TransfertSaisieMemoire(void);pascal void 	TransfertTE_Memoire(TEHandle te,unsigned long  absnum,short item);void			specialpaint (short y);pascal void 	ControlActionProc(ControlHandle control,short partcode);pascal void 	UpdateSaisie(void);pascal short 	GiveTotalChar(SousTitreRecordPtr st);pascal short 	GiveCurrentLine(SousTitreRecordPtr st);pascal short 	GiveCurrentLinetotalChar(SousTitreRecordPtr st);pascal void 	Draw_Line_Number_Saisie(void);pascal void		DoMenuCommand( long  menuResult);pascal void		PageSetup(void);pascal void		Imprimer(void);pascal void		IDoGetSaveName(void);pascal void		Terminate(void);pascal void		Close_BlockNoteTE(void);pascal void		DoGetSaveName(void);pascal void		ExportFichier(void);pascal void		AugmenteDureeTcListe(void);pascal void		OffsetTcListe(void);pascal void		Configuration_CacheSurZone(void);pascal void		Configuration_JustifSurZone(void);pascal void		ChangeStyle_FontDialog(void);pascal void		DecalerTexteDialog(void);pascal void		RemplacerTexteDialog(void);pascal void		RechercherTexteDialog(void);pascal void 	C_DeleteST(SousTitreRecordPtr ST_Ptr);pascal void 	Suppression_SousTitre(void);pascal void 	ConfigureToucheFonction(void);pascal void 	FairePreferenceFilm(void);pascal void 	FairePreference2Film(void);pascal void 	Suppression_SousTitre(void);pascal void 	Insert_Before(void);pascal void 	DoUseUndo(void);pascal void 	DoUseRedo(void);pascal void 	Preference_Affichage();pascal void 	ConfigurationCarteAffichage();pascal long 	C_ConversionChaineASCIITc(char* string);pascal void 	C_PrepositionneTCInterne(void);void 			GereStartupPref(void);void 			RecuperePreferences(void);void 			ConfigureLectureTc(void);void 			DrawThePopUp(DialogPtr dialog,short item,short menuID,short menuItem,MenuHandle MH);pascal void  	InitSerial(void); pascal void  	DoSerialSetup(void); pascal void 	DoMouseDownPaletteChenille(EventRecord	*event);pascal void 	DoUpdatePaletteChenille(void);pascal void 	DoChenilleIdle (void);pascal long 	C_IncDecValueSpecial(DialogPtr Dialog,short itemNumber,short textitemnumber,long minvalue,long maxvalue,long increment);pascal void 	MakeReliefRectangle2(Rect *rect);pascal void 	OuvrePoliceDuFilm(void);int				C_ExportFichier(void);pascal Boolean	DoExport_Fichier(ConstStr255Param name,short type);pascal void 	GetExportFileinPref(PrefExportFichierHandle* PrefExport);pascal void 	PutExportFileinPref(PrefExportFichierHandle  PrefExport);pascal void 	ExportationDeFichierAscii(HParmBlkPtr pb1,char* name);pascal void 	DessineProgression(Rect *rect,short min, short max,short value);pascal void 	C_EcarteSousTitre(SousTitreRecordPtr ST,long AskLongueur);pascal void 	PutFonctionKeyinPref(void);pascal long 	VerifieSousTitre(SousTitreRecordPtr ST_Ptr,PrefVerifListeHandle PrefVerif);pascal void 	DisplayErreur(long erreur);void 			VerifieLaListe(SousTitreRecordPtr start,SousTitreRecordPtr end,PrefVerifListeHandle PrefVerif);pascal 			SousTitreRecordPtr C_ConvertiNumST_Ptr(ConstStr255Param string);pascal void 	VerifieTexteUnSousTitre(SousTitreRecordPtr ST_Ptr);pascal void 	VerifieTexteListeSousTitre(SousTitreRecordPtr start,SousTitreRecordPtr end);pascal Boolean Filter_WithCountDown(DialogPtr theDialog,EventRecord *event,short *itemhit);//void 			GenerateurInterne(TMXTaskPtr myTask:__A1);pascal void 	AffichageSousTitre(void);void 			DoEvent(EventRecord *event);pascal OSErr	OAPPHandler(AppleEvent theAppleEvent, AppleEvent reply, long handlerRefCon);pascal OSErr	ODOCHandler(AppleEvent theAppleEvent, AppleEvent reply, long handlerRefCon);pascal OSErr	PDOCHandler(AppleEvent theAppleEvent, AppleEvent reply, long handlerRefCon);pascal OSErr	QUITHandler(AppleEvent theAppleEvent, AppleEvent reply, long handlerRefCon);pascal void		HandleGenericHighLevelEvent(EventRecord *event);pascal void		DoHighLevelEvent(EventRecord *event);pascal OSErr	launchMoniteurVideo(void);pascal void		QuitMoniteurVideo(void);pascal OSErr	launchSFG(void);pascal void 	QuitSansFauteGrammaire(void);pascal void 	ActiveSansFauteGrammaire(void);void 			UpdateInfoWindow(void);void			DrawInfowWindValue(void);void			DrawInfowWindValuePartiel(void);pascal void  C_InitMyCursor(void);pascal void  C_SpinCursor(long val);void SimuDialogEvent (EventRecord *event);short GiveFontItemNumber(short fontID);short GiveFontID(short fontItemNumber);void transfertAVOffscreenInScreen(void);void EffaceFenetreSimulation(void);void transfertAVOffscreenInScreen(void);void Affichage_SousTitreSimulation(void);void Affichage_SousTitreBroadcast(void);void DoRectTransparent(Rect *therect);void DessineAVST(SousTitreRecordPtr ST_Ptr,Boolean inOffscreen);pascal void CentreListingWindowByNumSTSimpleUpdate(long stnum,long oldstnum);pascal void PutAvFlagsPref(AvFlagsPrefHandle	PrefVerif);pascal void GetAvFlagsPref(AvFlagsPrefHandle*	PrefVerif);pascal void PutAvPref(AvPrefHandle	PrefVerif);pascal void PutVerifListeinPref(PrefVerifListeHandle	PrefVerif);void RAZReglageAV(void);void RecopieVerticalIntervalIdle(void);void LitVITCAVIdle(void);void DoUpdateVerticalIntervalWindow(void);void 			ClosePaletteKaraoke(DialogPtr dlog);void			ClosePaletteKaraoke(DialogPtr dlog);void			DoPaletteKaraokeDialogUpdate(DialogPtr dlog);void			DoPaletteKaraokeDialogActivate(DialogPtr dlog,Boolean activ);void			DoPaletteKaraokeContent(DialogPtr dlog, EventRecord *evt);pascal DialogPtr OpenPaletteKaraoke(void);pascal void 	C_RenumerotationListeSousTitre(SousTitreRecordPtr ST_Ptr);short  ChooseTheGraphicCard(CarteGraphElementPtr    CarteGraph,short  NbCarte, short actualcarte);pascal void Hand_EraseRect(Ptr Base,long RowByte,Rect *rect);void PutKaraokeIntoSt(SousTitreRecordPtr ST_Ptr,UserList *list1);void GetKaraokeFromST(long st_num);void InitialiseAffichageSimulation(void);void C_SaveData(short saveautoflag);pascal void C_DoFileOpen(FSSpecPtr fss);pascal void Create_FastFont(FontRenderRecordPtr FontRender,short mode,Ptr RenderEffect);unsigned long C_CHERCHESTPARnumero(char* string);//pascal long TestSiDansST(SousTitreRecordPtr ST_Ptr:__A0,unsigned long TC:__D0):__D0;void VerifListWithDefaultValue(void);void ChercheRemplaceTexte(short flag);short AskUserChoiceRechercheRemplace(long stnum,DialogPtr dlog);Boolean ChercheTexte(SousTitreRecordPtr ST_Ptr);void RemplaceTexte(TEHandle te);pascal void OpenTheTEListing(Point mouse);void ChangeSelectionEnCoursMinuscule(TEHandle te);void ChangeSelectionEnCoursMajuscule(TEHandle te);pascal Handle RPInitReglette(Str255 WindowName,Str255 PromptString,long MinValue,long MaxValue,Boolean BoutonStop);pascal void RPDispose(Handle theRpd);pascal Boolean RPIdle(Handle theRpd,long value,pascal void(*UpdateFct)(WindowPtr window),Boolean Multifinder);pascal Boolean RPIsFrontProcess(Handle theRpd);//SousTitreRecordPtr  C_ConversionTimeCodePointeur(long tc);#endif