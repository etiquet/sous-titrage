* ================================================* PROCEDURE		ExportFichier()* ================================================			SEG	'Traitement'ExportFichier	PROC	EXPORT			; any source file can use this routineStackFrame	RECORD	{A6Link},DECR		; build a stack frame recordParamBegin	EQU	*			; start parameters after this pointParamSize	EQU	ParamBegin-*		; size of all the passed parametersRetAddr 	DS.L	1			; place holder for return addressA6Link		DS.L	1			; place holder for A6 linkTheDialogPtr	DS.l	1		; le pointeur local du dialogreply		ds		StandardFileReplyfsOpenErr	ds.w	1fsRefNum	ds.w	1seconds		ds.l	1Buffer		ds.l	1count		ds.l	1FileLenth	ds.l	1textBuff		ds.b	256st0				ds.b	256st2				ds.b	256itemType		ds.w	1		; stockage du type de ItemitemHandle		ds.L	1		; stockage	du handle du itemitemRect		DS	RectItemchoisi		ds.w	1paramBlock		ds.b	ioFlClpSiz	; parameter block pour les fonction de fichierparamBlockBak	ds.b	ioFlClpSiz	; parameter block pour les fonction de fichierPopUp_Couleur	ds.l	1	; menu pop-upPopUp_Item		ds.w	1	; le item en courPopUpPoint		ds		REctrgb_color		ds.w	3Rectangle		ds		rectThe_Volume		ds.l	1LocalSize	EQU 	*			; size of all the local variables		endr				IMPORT	ExportationDeFichierAscii,WaitTicks,CopySTR,AppendSTr,TraitementErreurFichier		WITH	StackFrame,Reply,fssSpec,FontRenderRecord		;cover our local stack frame		LINK	A6,#LocalSize		; allocate our local stack frame		cmp.w	#-1,G.SoftProtect	;		bne		exit ;si fichier protection logiciel on passe les étapes suivantes						; on regarde s'il y a une eve init présente				clr.w	-(sp)		move.w	#$B581,-(sp)		pea		G.Eve_SerialNumber		move.l	G.EveHandle,-(sp)		import	RbeFindFirst		jsr		RbeFindFirst; si d0=0 il y a une clef					move.w	(sp)+,d0	; erreur 		move.w	d0,G.FindFirstKey_error		beq.S	ProtectionOk		CLR.W	-(SP)			; space for result of Alert		MOVE.W	#171,-(SP)	; resource for alert dialog		import	filterAlertProt2			; no filter procedure used here		pea		filterAlertProt2			; no filter procedure used here		_Alert				; read the resource and display it		MOVE.W	(SP)+,D0		; I don't care which item is was		bra		Exit; -------------------------------------------------------------------------		ProtectionOk		; on ouvre le dialog n°139 pour connaitre les choix des utilisateurs		clr.l	-(sp)		move.w	#139,-(sp)	; id number		clr.l	-(sp)			move.l	#-1,-(sp)		_GetNewDialog		move.l	(sp),TheDialogPtr(a6)  		_DrawDialog		; on trace le contour du bouton rechercher			move.l	TheDialogPtr(a6),-(sp)		move.w	#1,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem		move.l	TheDialogPtr(a6),-(sp)		_SetPort				move.w	#3,-(sp)		move.w	#3,-(sp)		_PenSize				pea		itemRect(a6)		move.w	#-4,-(sp)		move.w	#-4,-(sp)		_InsetRect				pea		itemRect(a6)		move.w	#16,-(sp)		move.w	#16,-(sp)		_FrameRoundRect		_PenNormal		; on souligne le titre				move.l	TheDialogPtr(a6),-(sp)		move.w	#9,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				pea		itemRect(a6)		_frameRect		; on récupère le pop-up menu		clr.l	-(sp)		move.w	#2012,-(sp)		_GetRMenu		move.l	(sp),PopUp_Couleur(a6)		move.w	#-1,-(sp)	; hierarchical menu		_insertMenu				tst.w	G.FindFirstKey_error		bne		@1		move.l	G.Options_dansLaClef,d0		and.l	#$100,d0					; $100 = norme N19 		bne		n19_valide 		@1						move.l	TheDialogPtr(a6),-(sp)		move.w	#4,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.w	ItemType(a6),d0		or.w	#$80,d0		move.w	d0,ItemType(a6)				move.l	TheDialogPtr(a6),-(sp)		move.w	#4,-(sp)		move.w	ItemType(a6),-(sp)		move.l	ItemHandle(a6),-(sp)		pea		itemRect(a6)		_SetDItem				move.l	ItemHandle(a6),-(sp)		move.W	#255,-(sp)				; inactif		_SetCtlValue				move.l	ItemHandle(a6),-(sp)		_showControln19_valide						tst.w	G.FindFirstKey_error		bne		@2				move.l	G.Options_dansLaClef,d0		and.l	#$200,d0					; $200 = norme export fichier texte CMC 		bne		CMC_valide@2				move.l	TheDialogPtr(a6),-(sp)		move.w	#5,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.w	ItemType(a6),d0		or.w	#$80,d0		move.w	d0,ItemType(a6)				move.l	TheDialogPtr(a6),-(sp)		move.w	#5,-(sp)		move.w	ItemType(a6),-(sp)		move.l	ItemHandle(a6),-(sp)		pea		itemRect(a6)		_SetDItem				move.l	ItemHandle(a6),-(sp)		move.W	#255,-(sp)				; inactif		_SetCtlValue				move.l	ItemHandle(a6),-(sp)		_showControl		CMC_valide						; on regarde dans les préférences les valeurs pour ce dialog, ; et on prépositionne les gadgets: 				bsr		Init_Dialog; si item 18 on dessine le pop-up menu 			move.l	TheDialogPtr(a6),-(sp)		move.w	#18,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				cmp.w	#8191,left+itemRect(a6)		bhi 	DialogLoop		; item disable		move.l	PopUp_Couleur(a6),a4		move.w	PopUp_Item(a6),d1		move.w	#18,d0		; item 18		bsr		DrawPopUpMenu						; --------------------------------------------------------------------; dialog loop 1	DialogLoop		import	SpecialModalDialogFilter		pea	SpecialModalDialogFilter		pea		Itemchoisi(a6)		_ModalDialog		move.w	Itemchoisi(A6),d0					case#.w	(d0,IF), \		(1,OkItem),\		(2,CancelItem),\		(3,TypeTexteItem),\		(4,TypeN19Item),\		(5,TypeCMCItem),\		(6,ChangeButton),\	;commentaire		(7,ChangeButton),\	; numéro secondaire		(8,ChangeButton),\		;Ms dos		(13,Mode_N19_Ouvert),\			(14,Mode_N19_teletexte),\		(15,ChangeButton),\		; double hauteur		(16,ChangeButton),\		; double largeur		(18,Pop_Up_Couleur)		bra	DialogLoop; ------------------------------------------------------		Pop_Up_Couleur				move.l	TheDialogPtr(a6),-(sp)		move.w	#18,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.w	left+itemRect(a6),left+PopUpPoint(a6)		move.w	top+itemRect(a6),top+PopUpPoint(a6)		add.w	#1,left+PopUpPoint(a6)		add.w	#1,top+PopUpPoint(a6)		pea		PopUpPoint(a6)		_LocalToGlobal				move.l	TheDialogPtr(a6),-(sp)		move.w	#17,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				pea		itemRect(a6)		_inverRect	; on check l'item		move.l	PopUp_Couleur(a6),-(sp)		move.w	PopUp_item(a6),-(sp)		move.w	#True,-(sp)		_CheckItem		; on affiche le menu				clr.l	-(sp)		move.l	PopUp_Couleur(a6),-(sp)		move.w	top+PopUpPoint(a6),-(sp)		move.w	left+PopUpPoint(a6),-(sp); on calcule la valeur de l'item		move.w	PopUp_Item(a6),-(sp)		_PopUpMenuSelect		move.l	(sp)+,d6		; on récupère l'item dans d6				move.l	PopUp_Couleur(a6),-(sp)		move.w	PopUp_item(a6),-(sp)		move.w	#false,-(sp)		_CheckItem				move.l	TheDialogPtr(a6),-(sp)		move.w	#40,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				pea		itemRect(a6)		_inverRect		tst.w	d6		beq		DialogLoop;; on redessine le texte du rectangle				move.l	PopUp_Couleur(a6),a4		move.w	d6,d1		move.w	#13,d0		jsr		DrawPopUpMenu				move.w	d6,PopUp_item(a6)		bra		DialogLoop; -------------------------------------				Mode_N19_Ouvert		move.l	TheDialogPtr(a6),-(sp)		move.w	#13,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#True,-(sp)		_SetCtlValue					move.l	TheDialogPtr(a6),-(sp)		move.w	#14,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue					bra	DialogLoop; ---------------------------------------------Mode_N19_teletexte						move.l	TheDialogPtr(a6),-(sp)		move.w	#13,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue					move.l	TheDialogPtr(a6),-(sp)		move.w	#14,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#true,-(sp)		_SetCtlValue							bra	DialogLoop;----------------------------------------------		TypeN19ItemTypeCMCItem		TypeTexteItem		sub.w	#2,d0		bsr	configureDialogExport_withDefaultOptions		bra	DialogLoop; ---------------------------------------------------ChangeButton		move.l	TheDialogPtr(a6),-(sp)		move.w	d0,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				bsr		ToggleControl		bra	DialogLoop		;--------------------------------------------		DisposDialog:CancelItem		move.l	TheDialogPtr(a6),-(sp)		_DisposDialog		bra		Exit	; non on se casse		; ------------------------------------------------------; ok on peut y aller		OkItem		; on sauvegarde les paramètres utilisés; type de fichier		move.l	TheDialogPtr(a6),-(sp)		move.w	#3,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				clr.w	-(sp)		move.l	ItemHandle(a6),-(sp)		_GetCtlValue		move.w	(sp)+,d0		beq.s	@a1		move.w	#Fichier_TypeTexte,d7			@a1						move.l	TheDialogPtr(a6),-(sp)		move.w	#4,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				clr.w	-(sp)		move.l	ItemHandle(a6),-(sp)		_GetCtlValue		move.w	(sp)+,d0		beq.s	@a2		move.w	#Fichier_TypeN19,d7		@a2				move.l	TheDialogPtr(a6),-(sp)		move.w	#5,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem					clr.w	-(sp)		move.l	ItemHandle(a6),-(sp)		_GetCtlValue		move.w	(sp)+,d0			beq.s	@a3			move.w	#Fichier_TypeCMC,d7@a3		move.w	d7,G.Preference_TypeExport; conversion ms dos		move.l	TheDialogPtr(a6),-(sp)		move.w	#8,-(sp)	;MSDOS		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem						clr.w	-(sp)		move.l	ItemHandle(a6),-(sp)		_GetCtlValue		move.w	(sp)+,G.Preference_ConvertMsDos	; commentaire		move.l	TheDialogPtr(a6),-(sp)		move.w	#7,-(sp); commentaire		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				clr.w	-(sp)		move.l	ItemHandle(a6),-(sp)		_GetCtlValue		move.w	(sp)+,G.Preference_InclureCommentaire		; numéro secondaire		move.l	TheDialogPtr(a6),-(sp)		move.w	#6,-(sp)	;suméro secondaire		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				clr.w	-(sp)		move.l	ItemHandle(a6),-(sp)		_GetCtlValue		move.w	(sp)+,G.Preference_InclureSousNumero			; type de fichier N19						move.l	TheDialogPtr(a6),-(sp)		move.w	#14,-(sp)			pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				clr.w	-(sp)		move.l	ItemHandle(a6),-(sp)		_GetCtlValue		move.w	(sp)+,G.Preference_N19_TypeTeletexte		; double hauteur				move.l	TheDialogPtr(a6),-(sp)		move.w	#15,-(sp)			pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				clr.w	-(sp)		move.l	ItemHandle(a6),-(sp)		_GetCtlValue		move.w	(sp)+,G.Preference_DoubleHauteur		; double largeur						move.l	TheDialogPtr(a6),-(sp)		move.w	#16,-(sp)	;suméro secondaire		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				clr.w	-(sp)		move.l	ItemHandle(a6),-(sp)		_GetCtlValue		move.w	(sp)+,G.Preference_DoubleLargeur				move.w	PopUp_Item(a6),G.Preference_Couleur				move	#2016,-(sp)		_DeleteMenu				move.l	PopUp_Couleur(a6),-(sp)		_ReleaseResource; ---; on passe aux fonctions de fichier 		Lea		G.Preference_TitreOriginal,a0		lea		st2(a6),a1		import	copystr		jsr		copystr		; si convertir en MSDOS on limite le nom du fichier à 8 lettres, sinon à 29 lettres		tst.w	G.Preference_ConvertMsDos		beq.s	TypeMAc		; fichier MSDOS donc 8 lettres				cmp.b	#9,st2(a6)		blo.s	PasSup8		lea		st2(a6),a0	; on place '&' pour dire que nous avons racourci le nom 		move.b	#'&',8(a0)		move.b	#8,st2(a6)PasSup8		TypeMAc				cmp.b	#27,st2(a6)		blo.s	PasSup27		lea		st2(a6),a0	; on place '&' pour dire que nous avons racourcie le nom 		move.b	#'&',27(a0)		move.b	#27,sfsname(a6)PasSup27; on place l'extension ,.DOC (ascii), .DAS (CMC), .STL (N19)		move.w	G.Preference_TypeExport,d0		case#.w	(d0,if),\		(Fichier_TypeTexte,ExportFichierTexte),\		(Fichier_TypeN19,ExporteFichierN19),\			; en fait N19		(Fichier_TypeCMC,ExporteFichierCMC)	ExportFichierTexte		lea		AsciiName(pc),a0		bra.s	AppendExtensionExporteFichierN19		lea		N19Name(pc),a0		bra.s	AppendExtensionExporteFichierCMC		lea		CmcName(pc),a0AppendExtension		lea		st2(a6),a1		import	AppendSTR		jsr		AppendSTR						; OK FICHIER OUVERT DONC ON APPELE la routine de d'exportation de fichier				move.l	TheDialogPtr(a6),-(sp); on ferme le dialog 		_DisposDialog						pea		st0(a6)		move.w	#129,-(sp)		move.w	#8,-(sp)		import	GetIndString		jsr		GetIndString	; texte "Exporter le fichier:" !				pea		st0(a6)		pea		st2(a6)		pea		reply(a6)		_StandardPutFile		move.b	sfGood(a6),d0		beq		Exit2	; l'utilisateur à Cancelé		tst.b	sfReplacing(a6)  		bne		FileExistAlready; le fichier n'existe pas	; on commence par créer le fichier en question.; ------------------------DoExportCreateFile		lea		paramBlock(a6),a0		clr.l	ioCompletion(a0)	; pas de routine de fin d'execution		lea		sfsname(a6),a1			; cf (standartfile.a)		move.l	a1,ioNamePtr(a0)		move.w	sfsvRefNum(a6),ioVrefNum(a0)		move.l	sfsparID(a6),ioDirID(a0)		_HCreate		; maintenant le fichier éxiste FileExistAlready; on ouvre le fichier		lea		paramBlock(a6),a0		clr.l	ioCompletion(a0)	; pas de routine de fin d'execution		lea		sfsname(a6),a1			; cf (standartfile.a)		move.l	a1,ioNamePtr(a0)		move.w	sfsvRefNum(a6),ioVrefNum(a0)		move.b	#4,ioPermssn(a0)			;fsRWrShPerm			clr.l	ioOwnBuf(a0)		move.l	sfsparID(a6),ioDirID(a0)		_HOpen		jsr		TraitementErreurFichier			tst.l	d1		bne		Exit2							lea		paramBlock(a6),a0		clr.l	ioCompletion(a0)	; pas de routine de fin d'execution		clr.w	28(a0)	;DirIndex		clr.l	ioOwnBuf(a0)		lea		sfsname(a6),a1			; cf (standartfile.a)		move.l	a1,ioNamePtr(a0)		move.w	sfsvRefNum(a6),ioVrefNum(a0)		_HGetFileInfo		jsr		TraitementErreurFichier							pea	paramBlock(a6)		pea	sfsname(a6)		jsr	ExportationDeFichierAscii				; on a fini de d'écrire dans le fichier, on actualise les info du film; on commence par lire les infos: 	; il faut maintenant créer les infos pour le finder		lea		paramBlock(a6),a0		clr.l	ioCompletion(a0)	; pas de routine de fin d'execution		move.l	Time,ioFlMdDat(a0)		lea		sfsname(a6),a1			; cf (standartfile.a)		move.l	a1,ioNamePtr(a0)		move.w	sfsvRefNum(a6),ioVrefNum(a0)		Move.l	#'TEXT',ioFlUsrWds(a0)		move.l	#'Bbou',4+ioFlUsrWds(a0)		move.l	sfsparID(a6),ioDirID(a0)		_HSetFileInfo		jsr		TraitementErreurFichier		; on dit au dos de s'assurer que tous à bien été écrit sur le disque		move.l	TheDialogPtr(a6),-(sp)		_SetPort				clr.l	-(sp)		move.w	#140,-(sp)		clr.l	-(sp)		move.l	#-1,-(sp)		_GetNewDialog		move.l	(sp),TheDialogPtr(a6)		_DrawDialog		lea		paramBlock(a6),a0		clr.l	ioCompletion(a0)		_FlushFile				clr.w	-(sp)		lea		paramBlock(a6),a0		move.w	ioVrefNum(a0),-(sp)		pea		The_Volume(a6)		import	GetVRefNum		jsr		GetVRefNum		move.w	(sp)+,d0	; on se tape du resultat				clr.w	-(sp)		clr.l	-(sp)		move.w	The_Volume(a6),-(sp)		import	FlushVol		jsr		FlushVol		move.w	(sp)+,d0				jsr		TraitementErreurFichier		move.l	#60,-(sp)		jsr		WaitTicks				closeFile			lea		paramBlock(a6),a0		clr.l	ioCompletion(a0)		_CloseExit2			move.l	TheDialogPtr(a6),-(sp)		_DisposDialog*   --------------------------------------------------------------------Exit		UNLK	A6			; destroy the link		MOVEA.L	(SP)+,A0		; pull off the return address		ADDA.L	#ParamSize,SP		; strip all of the caller's parameters		JMP	(A0)			; return to the caller		align 4						; ------------------ sub routines -------------------------Init_Dialog			move.w	G.Preference_TypeExport,d0		bsr		configureDialogExport			; on récupère les items		move.l	TheDialogPtr(a6),-(sp)		move.w	#8,-(sp)	;MSDOS		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem						move.l	ItemHandle(a6),-(sp)		move.w	G.Preference_ConvertMsDos,-(sp)			_SetCtlValue		move.l	TheDialogPtr(a6),-(sp)		move.w	#7,-(sp); commentaire		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	G.Preference_InclureCommentaire,-(sp)			_SetCtlValue				move.l	TheDialogPtr(a6),-(sp)		move.w	#6,-(sp)	;suméro secondaire		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	G.Preference_InclureSousNumero,-(sp)			_SetCtlValue					move.l	TheDialogPtr(a6),-(sp)		move.w	#14,-(sp)	;type de fichier 19		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	G.Preference_N19_TypeTeletexte,-(sp)			_SetCtlValue						move.l	TheDialogPtr(a6),-(sp)		move.w	#13,-(sp)	;type de fichier 19		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem		; on inverse l'état du bouton //14				move.w	G.Preference_N19_TypeTeletexte,d0		beq.s	@azerr		move.w	#false,d0			bra.s	@azertt@azerr	move.w	#true,d0	@azertt	move.l	ItemHandle(a6),-(sp)		move.w	d0,-(sp)			_SetCtlValue				move.l	TheDialogPtr(a6),-(sp)		move.w	#15,-(sp)	;double hauteur		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	G.Preference_DoubleHauteur,-(sp)			_SetCtlValue				move.l	TheDialogPtr(a6),-(sp)		move.w	#16,-(sp)	;double largeur		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	G.Preference_DoubleLargeur,-(sp)			_SetCtlValue				move.w	G.Preference_Couleur,PopUp_Item(a6)				rts		; -------------------------------------------------											; sub routine pour la fonction			configureDialogExport		case#.w	(d0,if),\		(1,SetGadgetTexte),\		(2,SetGadgetN19),\		(3,SetGadgetCMC)			rts		SetGadgetTexte				move.l	TheDialogPtr(a6),-(sp)		move.w	#3,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#True,-(sp)		_SetCtlValue					move.l	TheDialogPtr(a6),-(sp)		move.w	#4,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem						move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue					move.l	TheDialogPtr(a6),-(sp)		move.w	#5,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue	; on affiche les options associés		move.w	#False,d0		bsr	afficheN19Options		move.w	#true,d0		bsr	afficheTexteOptions		move.l	TheDialogPtr(a6),-(sp)		_DrawDialog				rts; ---------------------------			SetGadgetN19			move.l	TheDialogPtr(a6),-(sp)		move.w	#3,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue					move.l	TheDialogPtr(a6),-(sp)		move.w	#4,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#true,-(sp)		_SetCtlValue					move.l	TheDialogPtr(a6),-(sp)		move.w	#5,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.w	#true,d0				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue	; on affiche les options associés				move.w	#false,d0		bsr	afficheTexteOptions				move.w	#true,d0		bsr	afficheN19Options				move.l	TheDialogPtr(a6),-(sp)		_DrawDialog				RTS		; -------------------------------------------------			SetGadgetCMC		move.l	TheDialogPtr(a6),-(sp)		move.w	#3,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue					move.l	TheDialogPtr(a6),-(sp)		move.w	#4,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue					move.l	TheDialogPtr(a6),-(sp)		move.w	#5,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.w	#true,d0				move.l	ItemHandle(a6),-(sp)		move.w	#true,-(sp)		_SetCtlValue			; on affiche les options associés		move.w	#False,d0		bsr	afficheN19Options		move.w	#true,d0		bsr	afficheTexteOptions		move.l	TheDialogPtr(a6),-(sp)		_DrawDialog				RTS; -----------------------------------------------------------------------------configureDialogExport_withDefaultOptions		case#.w	(d0,if),\		(1,SetGadgetTexte_1),\		(2,SetGadgetN19_1),\		(3,SetGadgetCMC_1)			rts		SetGadgetTexte_1				move.l	TheDialogPtr(a6),-(sp)		move.w	#3,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#True,-(sp)		_SetCtlValue					move.l	TheDialogPtr(a6),-(sp)		move.w	#4,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem						move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue					move.l	TheDialogPtr(a6),-(sp)		move.w	#5,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue	; on affiche les options associés		move.w	#False,d0		bsr	afficheN19Options		move.w	#true,d0		bsr	afficheTexteOptions		move.l	TheDialogPtr(a6),-(sp)		_DrawDialog; numéro secondaire		move.l	TheDialogPtr(a6),-(sp)		move.w	#6,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue		; commentaire				move.l	TheDialogPtr(a6),-(sp)		move.w	#7,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue; conversion   MSDOs		move.l	TheDialogPtr(a6),-(sp)		move.w	#8,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue					rts; ---------------------------			SetGadgetN19_1			move.l	TheDialogPtr(a6),-(sp)		move.w	#3,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue					move.l	TheDialogPtr(a6),-(sp)		move.w	#4,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#true,-(sp)		_SetCtlValue					move.l	TheDialogPtr(a6),-(sp)		move.w	#5,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.w	#true,d0				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue	; on affiche les options associés		move.w	#false,d0		bsr	afficheTexteOptions				move.w	#True,d0		bsr	afficheN19Options				move.l	TheDialogPtr(a6),-(sp)		_DrawDialog; numéro secondaire		move.l	TheDialogPtr(a6),-(sp)		move.w	#6,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue		; commentaire				move.l	TheDialogPtr(a6),-(sp)		move.w	#7,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue; conversion   MSDOs		move.l	TheDialogPtr(a6),-(sp)		move.w	#8,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#true,-(sp)		_SetCtlValue					RTS		; -------------------------------------------------			SetGadgetCMC_1		move.l	TheDialogPtr(a6),-(sp)		move.w	#3,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue					move.l	TheDialogPtr(a6),-(sp)		move.w	#4,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue					move.l	TheDialogPtr(a6),-(sp)		move.w	#5,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.w	#true,d0				move.l	ItemHandle(a6),-(sp)		move.w	#true,-(sp)		_SetCtlValue			; on affiche les options associés		move.w	#False,d0		bsr	afficheN19Options		move.w	#true,d0		bsr	afficheTexteOptions				move.l	TheDialogPtr(a6),-(sp)		_DrawDialog; numéro secondaire		move.l	TheDialogPtr(a6),-(sp)		move.w	#6,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue		; commentaire				move.l	TheDialogPtr(a6),-(sp)		move.w	#7,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue; conversion   MSDOs		move.l	TheDialogPtr(a6),-(sp)		move.w	#8,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				move.l	ItemHandle(a6),-(sp)		move.w	#true,-(sp)		_SetCtlValue					RTS; -----------------------------------------------------------------------------ToggleControl		clr.w	-(sp)		move.l	ItemHandle(a6),-(sp)		_GetCtlValue		move.w	(sp)+,d0		beq		@1		move.l	ItemHandle(a6),-(sp)		move.w	#false,-(sp)		_SetCtlValue		rts@1		move.l	ItemHandle(a6),-(sp)		move.w	#true,-(sp)		_SetCtlValue		rts				; -------------------------------------------				afficheTexteOptions		move.w	d0,d7	; sauvegarde		bne.s	Show_texteOptions				move.l	TheDialogPtr(a6),-(sp)		move.w	#19,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				pea		itemRect(a6)		_EraseRect				pea		itemRect(a6)		_FrameRect		move.l	TheDialogPtr(a6),-(sp)		move.w	#6,-(sp)		_HideDItem		move.l	TheDialogPtr(a6),-(sp)		move.w	#7,-(sp)		_HideDItem		move.l	TheDialogPtr(a6),-(sp)		move.w	#8,-(sp)		_HideDItem		move.w	d7,d0	; sauvegarde		rts		Show_texteOptions				move.l	TheDialogPtr(a6),-(sp)		move.w	#19,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				pea		itemRect(a6)		_EraseRect				pea		itemRect(a6)		_FrameRect				move.l	TheDialogPtr(a6),-(sp)		move.w	#6,-(sp)		_ShowDItem		move.l	TheDialogPtr(a6),-(sp)		move.w	#7,-(sp)		_ShowDItem		move.l	TheDialogPtr(a6),-(sp)		move.w	#8,-(sp)		_ShowDItem		move.w	d7,d0	; sauvegarde		rts		;--------------------------------------------; affiche les options pour la norme n19afficheN19Options								move.w	d0,d7	; sauvegarde		move.l	TheDialogPtr(a6),-(sp)		move.w	#19,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				pea		itemRect(a6)		_EraseRect				pea		itemRect(a6)		_FrameRectPasAfffiche_encadrant				move.w	#13,d6Loop_afficheN19Options			tst.w	d7		beq		Hide_N19Items; --------				move.l	TheDialogPtr(a6),-(sp)		move.w	d6,-(sp)		_ShowDItem				bra.S	fin_LAN19O; --------		Hide_N19Items				move.l	TheDialogPtr(a6),-(sp)		move.w	d6,-(sp)		_HideDItem		fin_LAN19O		addq.w	#1,d6		cmp.w	#19,d6		beq.s	fin_LAN19O		cmp.w	#23,d6		blo		Loop_afficheN19Options; si item 18 actifon dessine le pop-up menu 			move.l	TheDialogPtr(a6),-(sp)		move.w	#18,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem				cmp.w	#8191,left+itemRect(a6)		bhi.s	Exit_N19ShowHide		; item disable		move.l	PopUp_Couleur(a6),a4		move.w	PopUp_Item(a6),d1		move.w	#18,d0		; item 18		bsr		DrawPopUpMenuExit_N19ShowHide		move.w	d7,d0	; sauvegarde		rts; ---------------------------------------------------------------; pour le pop-up menuDrawPopUpMenu						movem.l	d6-d7/a4,-(sp)		move.l	d1,d6		; item menu  		move.l	d0,d7		; n° item DItl				move.w	#2012,d5	; id du menu				move.l	TheDialogPtr(a6),-(sp)		move.w	#18,-(sp)		pea		ItemType(a6)		pea		ItemHandle(a6)		pea		itemRect(a6)		_GetDItem; on récupère la couleur de la chaîne en mémoire		_PenNormal		clr.l	-(sp)		move.w	d5,-(sp)		move.w	d6,-(sp)		_GetMCEntry		move.l	(sp)+,a0		cmp.l	#000000,a0		beq.s	NoColorMenu; on recopie la couleur du texte dans le rgb dans la pile			move.w	mctRGB2(a0),rgb_color(a6)		move.w	2+mctRGB2(a0),2+rgb_color(a6)		move.w	4+mctRGB2(a0),4+rgb_color(a6)	; et on affecte cette couleur au port actuel		pea		rgb_color(a6)		_RGBForecolor		NoColorMenu; on recupère la chaine de caractèred équivalente à la valeur stockée		move.l	a4,-(sp)		move.w	d6,-(sp)		pea		textBuff(a6)		_GetItem		; on dessine le texte		add.w	#14,left+itemRect(a6)				pea		itemRect(a6)		_eraseRect				move.w	#SrcOr,-(sp)		_TextMode; actif ou non		move.w	ItemType(a6),d0		btst	#7,d0		beq		Do_Normal 				pea		Qd.Gray		_penPat		bra.s	Do_Normal_1Do_Normal		_penNormalDo_Normal_1				move.w	left+itemRect(a6),-(sp)		move.w	top+itemRect(a6),d0		add.w	#12,d0		; font ascent		move.w	d0,-(sp)		_moveTo				pea		textBuff(a6)		_DrawString			; on rend la couleur noire pour le dessin du reste du popUp		move.w	#0,rgb_color(a6)		move.w	#0,2+rgb_color(a6)		move.w	#0,4+rgb_color(a6)	; et on affecte cette couleur au port actuel		pea		rgb_color(a6)		_RGBForecolor				sub.w	#14,left+itemRect(a6); on dessine le triangle en fin de texte		move.l	itemRect(a6),rectangle(a6)		move.l	4+itemRect(a6),4+rectangle(a6)		move.w	bottom+rectangle(a6),d6		sub.w	top+rectangle(a6),d6	; d6 = hauteur pop up		subq.w	#8,d6					; hauteur triangle		move.w	right+rectangle(a6),d0		sub.w	#6,d0		move.w	d0,-(sp)				move.w	top+rectangle(a6),d0		add.w	#3,d0		move.w	d0,-(sp)		_MoveTo				move.w	#2,-(sp)		move.w	#2,-(sp)		_penSize				neg.w	d6		move.w	d6,-(sp)		neg.w	d6		move.w	d6,-(sp)		_Line				neg.w	d6		move.w	d6,-(sp)		move.w	d6,-(sp)		_Line				neg.w	d6		asl.w	#1,d6			;*2		move.w	d6,-(sp)		clr.w	-(sp)		_Line		; on dessine le rectangle autour du texte						move.w	#1,-(sp)		move.w	#1,-(sp)		_penSize				pea		itemRect(a6)		_FrameRect				move.w	left+itemRect(a6),d0		add.w	#1,d0		move.w	d0,-(sp)				move.w	bottom+itemRect(a6),d0		move.w	d0,-(sp)		_MoveTo				move.w	right+itemRect(a6),d0		sub.w	left+itemRect(a6),d0		sub.w	#1,d0		move.w	d0,-(sp)		clr.w	-(sp)		_line				move.w	top+itemRect(a6),d0		sub.w	bottom+itemRect(a6),d0		clr.w	-(sp)		add.w	#1,d0 		move.w	d0,-(sp)		_line				_PenNormal			Exit_DrawPopUp		movem.l	(sp)+,d6-d7/a4		rts				String	pascal		AsciiName	dc.B	'.DOC'		CmcName		dc.B	'.DAS'		N19Name		dc.B	'.STL'					DbgInfo.New	ExportFichier		; this name will appear in the debugger		ENDP