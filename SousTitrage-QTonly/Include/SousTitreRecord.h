/********************************	SousTitreRecord.h	Definition d'un sous-titre ********************************/#ifndef	__SousTitreRecordh__#define	__SousTitreRecordh__/* définition de code pour les edit textes */ #define		Texte_SousTitre			1#define		Commentaire_SousTitre		2#define		TimecodeIn_SousTitre		3#define		TimecodeOut_SousTitre		4#define		Duree_SousTitre			5#define		TimecodeIn_SousTitrebcd		6	//undo uniquement#define		TimecodeOut_SousTitrebcd	7	//undo uniquementtypedef struct SousTitreRecord {Ptr							st_NextST;Ptr							st_PreviousST;unsigned long			st_TimeCodeIn ;unsigned long			st_TimeCodeOut;/*les bits 0 à 23 définissent le numéro "principal"; les bits 24 à 31	définissent le numéro "secondaire"; le numéro secondaire sert pour indentifier un sous-titre, lorsque l'on ne; renumérote pas automatiquement la liste de montage. */unsigned long			st_AbsNUMST; 	//numéro absolu du stunsigned long			st_NumeroST;		//(dc.l) numéro du sous-titre dans la liste/* case pour stocker l'ancien numéro si renumérotation */unsigned long			st_OldNumeroST;Ptr							st_StylePtr;Ptr							st_CommentairePtr;unsigned long			st_TexteLenth;unsigned long			st_StyleLenth;/*normalement st_LenthST = texte+style lenth; mais il sert à donner la longueur data du ST; entre autre si texte et style = 0; quand on vient de créer un nouveau st */unsigned long			st_LenthST;unsigned long			st_CommentaireLenth;/*	Offset sur position du sous-titre */short						st_XOffset; short						st_YOffset; /*  Case pour stocker le type d'erreur et certains attributs dans le sous-titre */short						st_Error; 			//16 possibilitées (suffisants je l'espère)/* --------------------- signification des bits ----------------------;Decale_bit 						equ		14	; sous-titre ayant été décalé	|	;outline box_bit 				equ		13	; 1 si outline box				|;XOffsetModel_bit 			equ 	12	; 0 si unité en pixel			|									; 1 mode téletexte (1 à 23)		|;doubleHauteur_bit	 		equ		11	; 1 si double hauteur			|;doubleLargeur_bit 			equ		10	; 1 si double hauteur			|;TeletextColor_bit			equ		9	; 1 siteletext, 0 si RGBColor	|;Suprimme_bit					equ		4	;?								|;TC_error_bit  				equ		3									|;Lisibilite_error_bit			equ		2									|;Interval_error_bit			equ		1									|; ------------------------------------------------------------------- */unsigned short			st_Nlines;			// nombres de lignes dans le sous-titre	/*; addresse de la table des positions ; permet potentiellement le positionnement indépendant ; de chaques caractères*/Handle						st_PosOffsetTable;	// nu pour l'instant ""KARAOKE"" momentanéementByte							st_Justification; 		//justification du texte 0 centrée, Byte							st_MasKType; 			//type de mask box, line, rectangle; = rienByte							st_spare[6]; 			//6 octets en reserve} SousTitreRecord,*SousTitreRecordPtr,**SousTitreRecordHandle;/*	structure pour un sous-titre dans un fichier*/typedef struct FileSTRecord{long		file_LenthST;long		file_TimeCodeIn;long		file_TimeCodeOut;long		file_NumeroST;long		file_TexteLenth	;long		file_StyleLenth;long		file_CommentaireLenth;short	file_XOffset; 	//± 32000 au maximumshort 	file_YOffset;	// ± 32000 au maximumshort	file_Flags;short 	file_Nlines;long  	file_PosOffsetTable;char 		file_Justification; //justification du sous-titreschar		file_MasKType; 		//type de mask box, line, rectanglechar 		file_spare[6];			// 6 octets en reserve}FileSTRecord,*FileSTRecordPtr,**FileSTRecordHandle;/* Structure pour les erreurs trouvées dans la listes des sous-titres */typedef struct SousTitreError{long		AbsNum;long		Errors;Handle	datah;long		spare;}SousTitreError,*SousTitreErrorPtr,**SousTitreErrorHandle;typedef struct SousTitreErrorListe{long						TotalErrorElement;SousTitreError		Errors[];}SousTitreErrorListe,*SousTitreErrorListePtr,**SousTitreErrorListeHandle;typedef struct  KaraokeElement{short	StartOffset;short	EndOffset;short	ligne;short	spare;long		TcIn;long		TcOut;long		duree;long		spare2;} KaraokeElement,*KaraokeElementPtr;typedef struct KaraokeRecord{long				total;KaraokeElement		KElement[];} KaraokeRecord,*KaraokeRecordPtr,**KaraokeRecordHandle;#endif //__SousTitreRecord.h__