#include <CodeFragments.h>#include <Gestalt.h>unsigned long PPCDispatch_ISpCR(unsigned long code, unsigned long param , Input_GameState* igs);typedef pascal unsigned long (*ISpCR_ProcPtr)(unsigned long code, unsigned long param ,Input_GameState* igs);enum {		uppISpCRProcInfo =  kPascalStackBased 		 | RESULT_SIZE(SIZE_CODE(sizeof(long))) 		 | STACK_ROUTINE_PARAMETER(1, SIZE_CODE(sizeof(unsigned long)))		 | STACK_ROUTINE_PARAMETER(2, SIZE_CODE(sizeof(unsigned long)))		 | STACK_ROUTINE_PARAMETER(3, SIZE_CODE(sizeof(Input_GameState*))) };	// Using these macros lets us use the same calls for 68K and PPC#if powerctypedef UniversalProcPtr ISpCR_UPP;#define ISpCR_Proc(Proc,code,param,igs)			\		CallUniversalProc((UniversalProcPtr)(Proc), uppISpCRProcInfo,(code,param,igs))#elsetypedef ISpCR_ProcPtr ISpCR_UPP;#define ISpCR_Proc(userRoutine,code,param,igs)		\		(*(userRoutine))(code,param,igs)#endif